#!/bin/bash -exu

SCRIPT_NAME=$(basename $0)
JOB_DIR=/var/vcap/jobs/tinyproxy
LOG_DIR=/var/vcap/sys/log/tinyproxy
PID_DIR=/var/vcap/sys/run/tinyproxy
CONFIG_DIR=/var/vcap/jobs/tinyproxy/config
BIN_DIR=/var/vcap/packages/tinyproxy/sbin

mkdir -p $LOG_DIR
chown -R vcap.vcap $LOG_DIR

exec > >(tee -a >(logger -p user.info -t vcap.${SCRIPT_NAME}.stdout) | awk -W interactive '{ system("echo -n [$(date +\"%Y-%m-%d %H:%M:%S%z\")]"); print " " $0 }' >> ${LOG_DIR}/${SCRIPT_NAME}.log)
exec 2> >(tee -a >(logger -p user.error -t vcap.${SCRIPT_NAME}.stderr) | awk -W interactive '{ system("echo -n [$(date +\"%Y-%m-%d %H:%M:%S%z\")]"); print " " $0 }' >> ${LOG_DIR}/${SCRIPT_NAME}.err.log)

function main() {
  case $1 in

    start)
      echo "Start: fixing permissions if needed"
      mkdir -p $PID_DIR
      chown -R vcap.vcap $PID_DIR
      
      pid=unset
      for i in ${CONFIG_DIR}/*.conf; do
        conf_name="$(echo $(basename $i)| sed 's@.conf$@@')"
        mkdir -p ${LOG_DIR}-${conf_name}
        chown -R vcap.vcap ${LOG_DIR}-${conf_name}
        echo "Starting $conf_name"
        ${BIN_DIR}/tinyproxy -c $i

        PID_FILE=${PID_DIR}/tinyproxy-${conf_name}.pid 

        ## wait for PID_FILE to be created by tinyproxy, or fail
        x=0
        while [ "$x" -lt 100 -a ! -e $PID_FILE ]; do
            x=$((x+1))
            sleep .1
        done
        test -e $PID_FILE || exit 2

        ## "pid" file is used by monit and is a copy of the first tinyproxy instance's PID
        if [ "$pid" == "unset" ]; then
          cp -a ${PID_FILE} ${PID_DIR}/pid
        fi
        pid=set
      done
        
      ;;

    stop)
      echo "stop: kill all tinyproxy"
      for i in ${PID_DIR}/tinyproxy-*; do
        kill $(cat ${i}) || true
        rm -f $i
      done
      kill $(cat ${PID_DIR}/pid) || true
      rm -f ${PID_DIR/pid}

      ;;

    *)

      echo "Usage: tinyproxy_ctl {start|stop}"

      ;;

  esac
}

main "${@}"